{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/Users/user-service.service\";\nclass RegisterComponent {\n  constructor(formBuilder, userService) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.imagenSeleccionada = new File([], '');\n    this.imagenBase64 = '';\n    this.registroForm = this.formBuilder.group({\n      name: ['Martinez', Validators.required],\n      image: ['', Validators.required],\n      lastName: ['LastName', Validators.required],\n      secondLastName: ['SecudLastName', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      numberPhone: ['30203993323', Validators.required],\n      document: ['1101878732', Validators.required],\n      email: ['luisandremartinez@gmail.com', Validators.required],\n      password: ['Hola123*', Validators.required],\n      documentTypeId: ['1', Validators.required],\n      addressId: ['0', Validators.required],\n      rolId: ['1', Validators.required]\n    });\n  }\n  uploadFile(file) {\n    const dto = new FormData();\n    dto.append('image', file);\n  }\n  onUploadFile(event) {\n    const elemento = event.target;\n    const file = elemento.files?.item(0);\n    if (file) {\n      this.imagenSeleccionada = file;\n    }\n  }\n  createUser() {\n    console.log(\"Base64 a enviar\", this.imagenBase64);\n    // Crear un nuevo objeto de usuario para enviar al backend\n    const usuarioEnviar = {\n      name: this.registroForm.value.name,\n      image: this.convertFromBase64ToBytes(this.imagenBase64).toString(),\n      lastName: this.registroForm.value.lastName,\n      secondLastName: this.registroForm.value.secondLastName,\n      dateOfBirth: this.registroForm.value.dateOfBirth,\n      numberPhone: this.registroForm.value.numberPhone,\n      document: this.registroForm.value.document,\n      email: this.registroForm.value.email,\n      password: this.registroForm.value.password,\n      documentTypeId: this.registroForm.value.documentTypeId,\n      addressId: this.registroForm.value.addressId,\n      rolId: this.registroForm.value.rolId\n    };\n    // this.userService.create(usuarioEnviar).subscribe(response =>{\n    //   console.log(response)\n    // })\n  }\n\n  convertFromBase64ToBytes(base64String) {\n    const raw = atob(base64String.replace(/^data:image\\/\\w+;base64,/, ''));\n    const length = raw.length;\n    const bytes = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n      bytes[i] = raw.charCodeAt(i);\n    }\n    return bytes;\n  }\n  onFileChange(event) {\n    this.imagenSeleccionada = event.target.files[0];\n    if (this.imagenSeleccionada) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.imagenBase64 = e.target.result;\n        console.log(\"Base64\", this.imagenBase64);\n      };\n      reader.readAsDataURL(this.imagenSeleccionada);\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserServiceService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 4,\n  vars: 0,\n  consts: [[\"rel\", \"preconnect\", \"href\", \"https://fonts.googleapis.com\"], [\"rel\", \"preconnect\", \"href\", \"https://fonts.gstatic.com\", \"crossorigin\", \"\"], [\"href\", \"https://fonts.googleapis.com/css2?family=Quicksand:wght@300;500;700&display=swap\", \"rel\", \"stylesheet\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"head\");\n      i0.ɵɵelement(1, \"link\", 0)(2, \"link\", 1)(3, \"link\", 2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"body[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-family: \\\"Quicksand\\\", sans-serif;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9QYWdlcy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFTQTtFQUNFLFNBQUE7RUFDQSxvQ0FBQTtBQVJGIiwic291cmNlc0NvbnRlbnQiOlsiJHdoaXRlOiAjRkZGRkZGO1xyXG4kYmxhY2s6ICMwMDAwMDA7XHJcbiRWZXJ5LWxpZ2h0LXBpbms6ICNDN0M3Qzc7XHJcbiR0ZXh0LWlucHV0LWZpZWxkOiAjRjdGN0Y3O1xyXG4kaG9scGl0YWwtZ3JlZW46ICM5YWUwN2Q7XHJcbiRzbTogMTRweDtcclxuJG1kOjE2cHg7XHJcbiRsZzowcHg7XHJcblxyXG5ib2R5e1xyXG4gIG1hcmdpbjogMDtcclxuICBmb250LWZhbWlseTogJ1F1aWNrc2FuZCcsIHNhbnMtc2VyaWY7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterComponent };","map":{"version":3,"names":["Validators","RegisterComponent","constructor","formBuilder","userService","imagenSeleccionada","File","imagenBase64","registroForm","group","name","required","image","lastName","secondLastName","dateOfBirth","numberPhone","document","email","password","documentTypeId","addressId","rolId","uploadFile","file","dto","FormData","append","onUploadFile","event","elemento","target","files","item","createUser","console","log","usuarioEnviar","value","convertFromBase64ToBytes","toString","base64String","raw","atob","replace","length","bytes","Uint8Array","i","charCodeAt","onFileChange","reader","FileReader","onload","e","result","readAsDataURL","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","UserServiceService","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["C:\\Users\\Asus\\source\\repos\\Frontend_Proyect_Personal\\ESTREMOR\\src\\app\\components\\Pages\\register\\register.component.ts","C:\\Users\\Asus\\source\\repos\\Frontend_Proyect_Personal\\ESTREMOR\\src\\app\\components\\Pages\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DocumentTypeModel } from 'src/app/Models/DocumentType/DocumentTypeModel';\nimport { GetRolModel } from 'src/app/Models/Rol/RolModel';\nimport { CreateUserModel } from 'src/app/Models/Users/CreateUserModel';\nimport { UserServiceService } from 'src/app/services/Users/user-service.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n    registroForm: FormGroup;\n    imagenSeleccionada: File = new File([],'');\n    imagenBase64: string = '';\n    constructor\n    (\n      private formBuilder: FormBuilder,\n      private userService : UserServiceService\n    ) {\n\n      this.registroForm = this.formBuilder.group({\n        name: ['Martinez', Validators.required],\n        image: ['', Validators.required],\n        lastName: ['LastName', Validators.required],\n        secondLastName:['SecudLastName', Validators.required],\n        dateOfBirth: ['', Validators.required],\n        numberPhone: ['30203993323', Validators.required],\n        document: ['1101878732', Validators.required],\n        email: ['luisandremartinez@gmail.com', Validators.required],\n        password: ['Hola123*', Validators.required],\n        documentTypeId: ['1',Validators.required],\n        addressId: ['0',Validators.required],\n        rolId: ['1', Validators.required]\n      });\n    }\n\n    uploadFile(file:Blob){\n      const dto = new FormData()\n      dto.append('image',file);\n    }\n\n    onUploadFile(event:Event){\n      const elemento = event.target as HTMLInputElement;\n      const file = elemento.files?.item(0);\n      if(file){\n        this.imagenSeleccionada = file;\n      }\n    }\n\n    createUser() {\n\n      console.log(\"Base64 a enviar\",this.imagenBase64)\n      // Crear un nuevo objeto de usuario para enviar al backend\n      const usuarioEnviar: CreateUserModel = {\n        name: this.registroForm.value.name,\n        image:this.convertFromBase64ToBytes(this.imagenBase64).toString(),\n        lastName: this.registroForm.value.lastName,\n        secondLastName: this.registroForm.value.secondLastName,\n        dateOfBirth: this.registroForm.value.dateOfBirth,\n        numberPhone: this.registroForm.value.numberPhone,\n        document: this.registroForm.value.document,\n        email: this.registroForm.value.email,\n        password: this.registroForm.value.password,\n        documentTypeId: this.registroForm.value.documentTypeId,\n        addressId: this.registroForm.value.addressId,\n        rolId: this.registroForm.value.rolId\n      };\n\n      // this.userService.create(usuarioEnviar).subscribe(response =>{\n      //   console.log(response)\n      // })\n    }\n    convertFromBase64ToBytes(base64String: string): Uint8Array {\n      const raw = atob(base64String.replace(/^data:image\\/\\w+;base64,/, ''));\n      const length = raw.length;\n      const bytes = new Uint8Array(length);\n\n      for (let i = 0; i < length; i++) {\n        bytes[i] = raw.charCodeAt(i);\n      }\n      return bytes;\n    }\n    onFileChange(event: any) {\n      this.imagenSeleccionada = event.target.files[0];\n      if (this.imagenSeleccionada) {\n        const reader = new FileReader();\n        reader.onload = (e: any) => {\n          this.imagenBase64 = e.target.result;\n          console.log(\"Base64\",this.imagenBase64)\n        };\n        reader.readAsDataURL(this.imagenSeleccionada);\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n","<head>\r\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n  <link href=\"https://fonts.googleapis.com/css2?family=Quicksand:wght@300;500;700&display=swap\" rel=\"stylesheet\">\r\n</head>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}