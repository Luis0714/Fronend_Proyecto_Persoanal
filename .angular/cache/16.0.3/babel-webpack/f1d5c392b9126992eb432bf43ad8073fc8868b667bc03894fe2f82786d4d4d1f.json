{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Asus/source/repos/Frontend_Proyect_Personal/ESTREMOR/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/Users/user-service.service\";\nclass RegisterComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.user = {\n      name: '',\n      image: \"\",\n      lastName: '',\n      secondLastName: '',\n      dateOfBirth: new Date(),\n      numberPhone: '',\n      document: '',\n      email: '',\n      password: '',\n      documentTypeId: 0,\n      addressId: 0,\n      rolId: 0\n    };\n    this.roles = [{\n      id: 1,\n      name: 'SuperAdmin'\n    }, {\n      id: 1,\n      name: 'Usuario de la pagina'\n    }];\n    this.documentTypes = [{\n      id: 1,\n      name: 'SuperAdmin'\n    }, {\n      id: 1,\n      name: 'Usuario de la pagina'\n    }];\n    this.imagePreview = '../../../';\n  }\n  OnCreateUser() {}\n  onImageUpload(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.user.image = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  createUser() {\n    this.userService.create(this.user).subscribe(reponse => {\n      console.log(reponse);\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UserServiceService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 0,\n  vars: 0,\n  template: function RegisterComponent_Template(rf, ctx) {},\n  styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n}\\n\\n.register-form[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\n.form-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  flex: 0 0 30%;\\n  margin-bottom: 20px;\\n}\\n\\n.uploaded-image[_ngcontent-%COMP%] {\\n  max-width: 200px;\\n  height: auto;\\n  margin-top: 10px;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n  padding: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9QYWdlcy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxlQUFBO0VBQ0EsOEJBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgbWF4LXdpZHRoOiA4MDBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLnJlZ2lzdGVyLWZvcm0ge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbn1cclxuXHJcbi5mb3JtLXJvdyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcblxyXG4uZm9ybS1ncm91cCB7XHJcbiAgZmxleDogMCAwIDMwJTtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4udXBsb2FkZWQtaW1hZ2Uge1xyXG4gIG1heC13aWR0aDogMjAwcHg7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgcGFkZGluZzogNXB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { RegisterComponent };\nlet RegistroComponent = class RegistroComponent {\n  constructor(formBuilder, http) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n  }\n  ngOnInit() {\n    this.registroForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      image: ['', Validators.required],\n      lastName: ['', Validators.required],\n      secondLastName: [''],\n      dateOfBirth: ['', Validators.required],\n      numberPhone: ['', Validators.required],\n      document: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      documentTypeId: ['', Validators.required],\n      addressId: ['', Validators.required],\n      rolId: ['', Validators.required]\n    });\n  }\n  get formControls() {\n    return this.registroForm.controls;\n  }\n  onFileChange(event) {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.registroForm.patchValue({\n        image: file\n      });\n    }\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.registroForm.invalid) {\n        return;\n      }\n      const formData = new FormData();\n      const formValue = _this.registroForm.value;\n      Object.keys(formValue).forEach(key => {\n        if (key !== 'image') {\n          formData.append(key, formValue[key]);\n        } else {\n          formData.append(key, formValue[key], formValue[key].name);\n        }\n      });\n      try {\n        const response = yield _this.http.post('url_del_backend', formData).toPromise();\n        console.log('Usuario registrado correctamente');\n        // Realizar acciones adicionales después de registrar al usuario\n      } catch (error) {\n        console.error('Error al registrar al usuario', error);\n        // Manejar el error según sea necesario\n      }\n    })();\n  }\n};\n\nRegistroComponent = __decorate([Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})], RegistroComponent);\nexport { RegistroComponent };","map":{"version":3,"names":["Component","Validators","RegisterComponent","constructor","userService","user","name","image","lastName","secondLastName","dateOfBirth","Date","numberPhone","document","email","password","documentTypeId","addressId","rolId","roles","id","documentTypes","imagePreview","OnCreateUser","onImageUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","createUser","create","subscribe","reponse","console","log","i0","ɵɵdirectiveInject","i1","UserServiceService","selectors","decls","vars","template","RegisterComponent_Template","rf","ctx","styles","RegistroComponent","formBuilder","http","ngOnInit","registroForm","group","required","formControls","controls","onFileChange","length","patchValue","onSubmit","_this","_asyncToGenerator","invalid","formData","FormData","formValue","value","Object","keys","forEach","key","append","response","post","toPromise","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Asus\\source\\repos\\Frontend_Proyect_Personal\\ESTREMOR\\src\\app\\components\\Pages\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DocumentTypeModel } from 'src/app/Models/DocumentType/DocumentTypeModel';\nimport { GetRolModel } from 'src/app/Models/Rol/RolModel';\nimport { CreateUserModel } from 'src/app/Models/Users/CreateUserModel';\nimport { UserServiceService } from 'src/app/services/Users/user-service.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  user: CreateUserModel = {\n    name: '',\n    image: \"\", // Asigna la imagen base64 obtenida a la propiedad \"image\"\n    lastName: '',\n    secondLastName: '',\n    dateOfBirth: new Date(),\n    numberPhone: '',\n    document: '',\n    email: '',\n    password: '',\n    documentTypeId: 0,\n    addressId: 0,\n    rolId: 0,\n  }\n  roles: GetRolModel[] =\n    [\n      {\n        id: 1,\n        name: 'SuperAdmin'\n      },\n      {\n        id: 1,\n        name: 'Usuario de la pagina'\n      }\n    ]\n    documentTypes: DocumentTypeModel[] =\n    [\n      {\n        id: 1,\n        name: 'SuperAdmin'\n      },\n      {\n        id: 1,\n        name: 'Usuario de la pagina'\n      }\n    ]\n    imagePreview:string = '../../../'\n  constructor(\n    private userService: UserServiceService\n  ) { }\n\n  OnCreateUser(){\n\n  }\n  onImageUpload(event: any) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        this.user.image = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  createUser() {\n    this.userService.create(this.user)\n      .subscribe(reponse => {\n        console.log(reponse)\n      });\n  }\n}\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})\nexport class RegistroComponent implements OnInit {\n  registroForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.registroForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      image: ['', Validators.required],\n      lastName: ['', Validators.required],\n      secondLastName: [''],\n      dateOfBirth: ['', Validators.required],\n      numberPhone: ['', Validators.required],\n      document: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      documentTypeId: ['', Validators.required],\n      addressId: ['', Validators.required],\n      rolId: ['', Validators.required]\n    });\n  }\n\n  get formControls() {\n    return this.registroForm.controls;\n  }\n\n  onFileChange(event: any) {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.registroForm.patchValue({\n        image: file\n      });\n    }\n  }\n\n  async onSubmit() {\n    if (this.registroForm.invalid) {\n      return;\n    }\n\n    const formData = new FormData();\n    const formValue = this.registroForm.value;\n\n    Object.keys(formValue).forEach(key => {\n      if (key !== 'image') {\n        formData.append(key, formValue[key]);\n      } else {\n        formData.append(key, formValue[key], formValue[key].name);\n      }\n    });\n\n    try {\n      const response = await this.http.post<Response<UserDTO>>('url_del_backend', formData).toPromise();\n      console.log('Usuario registrado correctamente');\n      // Realizar acciones adicionales después de registrar al usuario\n    } catch (error) {\n      console.error('Error al registrar al usuario', error);\n      // Manejar el error según sea necesario\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}