{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Asus/source/repos/Frontend_Proyect_Personal/ESTREMOR/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(userService, formBuilder) {\n    this.userService = userService;\n    this.formBuilder = formBuilder;\n    this.user = {\n      name: '',\n      image: \"\",\n      lastName: '',\n      secondLastName: '',\n      dateOfBirth: new Date(),\n      numberPhone: '',\n      document: '',\n      email: '',\n      password: '',\n      documentTypeId: 0,\n      addressId: 0,\n      rolId: 0\n    };\n    this.roles = [{\n      id: 1,\n      name: 'SuperAdmin'\n    }, {\n      id: 1,\n      name: 'Usuario de la pagina'\n    }];\n    this.documentTypes = [{\n      id: 1,\n      name: 'SuperAdmin'\n    }, {\n      id: 1,\n      name: 'Usuario de la pagina'\n    }];\n    this.imagePreview = '../../../';\n    this.registroForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      image: ['', Validators.required],\n      lastName: ['', Validators.required],\n      secondLastName: [''],\n      dateOfBirth: ['', Validators.required],\n      numberPhone: ['', Validators.required],\n      document: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      documentTypeId: ['', Validators.required],\n      addressId: ['', Validators.required],\n      rolId: ['', Validators.required]\n    });\n  }\n  get formControls() {\n    return this.registroForm.controls;\n  }\n  onFileChange(event) {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n    }\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.registroForm.invalid) {\n        return;\n      }\n      const formData = new FormData();\n      const formValue = _this.registroForm.value;\n      Object.keys(formValue).forEach(key => {\n        if (key !== 'image') {\n          formData.append(key, formValue[key]);\n        } else {\n          formData.append(key, formValue[key], formValue[key].name);\n        }\n      });\n      _this.user;\n    })();\n  }\n  onImageUpload(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.user.image = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  createUser() {\n    this.userService.create(this.user).subscribe(reponse => {\n      console.log(reponse);\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["Component","Validators","RegisterComponent","constructor","userService","formBuilder","user","name","image","lastName","secondLastName","dateOfBirth","Date","numberPhone","document","email","password","documentTypeId","addressId","rolId","roles","id","documentTypes","imagePreview","registroForm","group","required","formControls","controls","onFileChange","event","target","files","length","file","onSubmit","_this","_asyncToGenerator","invalid","formData","FormData","formValue","value","Object","keys","forEach","key","append","onImageUpload","reader","FileReader","onload","e","result","readAsDataURL","createUser","create","subscribe","reponse","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Asus\\source\\repos\\Frontend_Proyect_Personal\\ESTREMOR\\src\\app\\components\\Pages\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DocumentTypeModel } from 'src/app/Models/DocumentType/DocumentTypeModel';\nimport { GetRolModel } from 'src/app/Models/Rol/RolModel';\nimport { CreateUserModel } from 'src/app/Models/Users/CreateUserModel';\nimport { UserServiceService } from 'src/app/services/Users/user-service.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  user: CreateUserModel = {\n    name: '',\n    image: \"\", // Asigna la imagen base64 obtenida a la propiedad \"image\"\n    lastName: '',\n    secondLastName: '',\n    dateOfBirth: new Date(),\n    numberPhone: '',\n    document: '',\n    email: '',\n    password: '',\n    documentTypeId: 0,\n    addressId: 0,\n    rolId: 0,\n  }\n  roles: GetRolModel[] =\n    [\n      {\n        id: 1,\n        name: 'SuperAdmin'\n      },\n      {\n        id: 1,\n        name: 'Usuario de la pagina'\n      }\n    ]\n    documentTypes: DocumentTypeModel[] =\n    [\n      {\n        id: 1,\n        name: 'SuperAdmin'\n      },\n      {\n        id: 1,\n        name: 'Usuario de la pagina'\n      }\n    ]\n    imagePreview:string = '../../../'\n    registroForm: FormGroup;\n  constructor(\n    private userService: UserServiceService,\n    private formBuilder:FormBuilder\n  ) {\n    this.registroForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      image: ['', Validators.required],\n      lastName: ['', Validators.required],\n      secondLastName: [''],\n      dateOfBirth: ['', Validators.required],\n      numberPhone: ['', Validators.required],\n      document: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      documentTypeId: ['', Validators.required],\n      addressId: ['', Validators.required],\n      rolId: ['', Validators.required]\n  })\n  }\n\n\n\n\n  get formControls() {\n    return this.registroForm.controls;\n  }\n\n  onFileChange(event: any) {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n     \n    }\n  }\n\n  async onSubmit() {\n    if (this.registroForm.invalid) {\n      return;\n    }\n\n    const formData = new FormData();\n    const formValue = this.registroForm.value;\n\n    Object.keys(formValue).forEach(key => {\n      if (key !== 'image') {\n        formData.append(key, formValue[key]);\n      } else {\n        formData.append(key, formValue[key], formValue[key].name);\n      }\n    });\n\n   this.user\n\n  }\n\n\n\n  onImageUpload(event: any) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        this.user.image = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  createUser() {\n    this.userService.create(this.user)\n      .subscribe(reponse => {\n        console.log(reponse)\n      });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}