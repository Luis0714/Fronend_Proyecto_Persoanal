{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators, FormGroup } from '@angular/forms';\nimport { faRightFromBracket, faImage, faUser, faCalendar, faIdCard, faLocationDot, faEnvelope, faUsers, faPhone, faUserSecret } from '@fortawesome/free-solid-svg-icons';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, userService, router) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.router = router;\n    this.imagenSeleccionada = new File([], '');\n    this.imagenBase64 = '';\n    this.faUsers = faUsers;\n    this.faUser = faUser;\n    this.faPhone = faPhone;\n    this.faUserSecret = faUserSecret;\n    this.faEnvelope = faEnvelope;\n    this.faRightFromBracket = faRightFromBracket;\n    this.faLocationDot = faLocationDot;\n    this.faIdCard = faIdCard;\n    this.faCalendar = faCalendar;\n    this.faImage = faImage;\n    this.form = new FormGroup('');\n    this.buidForm();\n  }\n  buidForm() {\n    this.form = this.formBuilder.group({\n      name: ['Luis Andres', [Validators.required]],\n      image: ['foto.png', [Validators.required]],\n      lastName: ['Martinez', [Validators.required]],\n      secondLastName: ['Estremor', [Validators.required]],\n      dateOfBirth: ['', [Validators.required]],\n      documentTypeId: ['1', [Validators.required]],\n      document: ['901282344', [Validators.required]],\n      numberPhone: ['3209876565', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n      email: ['luisandres@gamil.com', [Validators.required, Validators.email]],\n      password: ['Hola123*', [Validators.required]],\n      address: ['Carrera 31 #65A-21', [Validators.required]],\n      rolId: ['1', [Validators.required]]\n    });\n  }\n  registerUser(event) {\n    if (this.form.valid) {\n      this.createUser();\n    } else {\n      this.form.markAllAsTouched();\n    }\n  }\n  createUser() {\n    const data = this.form.value;\n    this.userService.create(data).subscribe(response => {\n      if (response) {\n        this.router.navigate(['/users']);\n      }\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["Component","Validators","FormGroup","faRightFromBracket","faImage","faUser","faCalendar","faIdCard","faLocationDot","faEnvelope","faUsers","faPhone","faUserSecret","RegisterComponent","constructor","formBuilder","userService","router","imagenSeleccionada","File","imagenBase64","form","buidForm","group","name","required","image","lastName","secondLastName","dateOfBirth","documentTypeId","document","numberPhone","minLength","maxLength","email","password","address","rolId","registerUser","event","valid","createUser","markAllAsTouched","data","value","create","subscribe","response","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Asus\\source\\repos\\Frontend_Proyect_Personal\\ESTREMOR\\src\\app\\components\\Pages\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, Validators,FormGroup } from '@angular/forms';\nimport { CreateUserModel } from 'src/app/Models/Users/CreateUserModel';\nimport { UserServiceService } from 'src/app/services/Users/user-service.service';\nimport { faRightFromBracket, faImage,faUser, faCalendar, faIdCard, faLocationDot, faEnvelope, faXmark,faUsers,faPhone, faUserSecret} from '@fortawesome/free-solid-svg-icons';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n  imagenSeleccionada: File = new File([],'');\n  imagenBase64: string = '';\n  faUsers = faUsers;\n  faUser = faUser;\n  faPhone = faPhone;\n  faUserSecret = faUserSecret;\n  faEnvelope = faEnvelope;\n  faRightFromBracket = faRightFromBracket;\n  faLocationDot = faLocationDot;\n  faIdCard  = faIdCard;\n  faCalendar = faCalendar;\n  faImage = faImage;\n\n  form:FormGroup = new FormGroup('');\n\n\n  constructor\n  (\n    private formBuilder: FormBuilder,\n    private userService : UserServiceService,\n    private router: Router\n  )\n  {\n    this.buidForm()\n  }\n\n  buidForm(){\n    this.form = this.formBuilder.group({\n        name: ['Luis Andres',[Validators.required]],\n        image : ['foto.png',[Validators.required]],\n        lastName: ['Martinez',[Validators.required]],\n        secondLastName: ['Estremor',[Validators.required]],\n        dateOfBirth: ['',[Validators.required]],\n        documentTypeId: ['1',[Validators.required]],\n        document: ['901282344',[Validators.required]],\n        numberPhone: ['3209876565',[Validators.required,Validators.minLength(10),Validators.maxLength(10)]],\n        email: ['luisandres@gamil.com',[Validators.required, Validators.email]],\n        password: ['Hola123*',[Validators.required]],\n        address: ['Carrera 31 #65A-21',[Validators.required]],\n        rolId:['1',[Validators.required]]\n    });\n  }\n\n  registerUser(event:Event){\n    if(this.form.valid){\n      this.createUser();\n    }else{\n      this.form.markAllAsTouched();\n    }\n  }\n  createUser(){\n    const data = this.form.value;\n    this.userService.create(data).\n    subscribe(response =>{\n      if(response){\n        this.router.navigate(['/users'])\n      }\n    })\n  }\n  }\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}