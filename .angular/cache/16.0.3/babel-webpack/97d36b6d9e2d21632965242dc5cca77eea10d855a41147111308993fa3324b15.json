{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, userService) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.imagenSeleccionada = new File([], '');\n    this.imagenBase64 = '';\n    this.registroForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      image: ['', Validators.required],\n      lastName: ['', Validators.required],\n      secondLastName: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      numberPhone: ['', Validators.required],\n      document: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      documentTypeId: ['', Validators.required],\n      addressId: [''],\n      rolId: ['', Validators.required]\n    });\n  }\n  uploadFile(file) {\n    const dto = new FormData();\n    dto.append('image', file);\n  }\n  onUploadFile(event) {\n    const elemento = event.target;\n    const file = elemento.files?.item(0);\n    if (file) {\n      this.imagenSeleccionada = file;\n    }\n  }\n  createUser() {\n    if (this.registroForm.invalid) {\n      // Si el formulario no es válido, puedes mostrar un mensaje de error o realizar alguna acción adicional\n      return;\n    }\n    // Crear un nuevo objeto de usuario para enviar al backend\n    const usuarioEnviar = {\n      name: this.registroForm.value.name,\n      image: this.imagenBase64,\n      lastName: this.registroForm.value.lastName,\n      secondLastName: this.registroForm.value.secondLastName,\n      dateOfBirth: this.registroForm.value.dateOfBirth,\n      numberPhone: this.registroForm.value.numberPhone,\n      document: this.registroForm.value.document,\n      email: this.registroForm.value.email,\n      password: this.registroForm.value.password,\n      documentTypeId: this.registroForm.value.documentTypeId,\n      addressId: this.registroForm.value.addressId,\n      rolId: this.registroForm.value.rolId\n    };\n    // Aquí puedes realizar las operaciones necesarias para enviar el objeto 'usuarioEnviar' al backend a través de una solicitud HTTP\n    // Asegúrate de manejar adecuadamente el envío de la imagen y otros datos según las necesidades de tu backend\n    console.log(usuarioEnviar);\n  }\n  onFileChange(event) {\n    this.imagenSeleccionada = event.target.files[0];\n    if (this.imagenSeleccionada) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.imagenBase64 = e.target.result;\n      };\n      reader.readAsDataURL(this.imagenSeleccionada);\n    } else {\n      this.imagenBase64 = '';\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["Component","Validators","RegisterComponent","constructor","formBuilder","userService","imagenSeleccionada","File","imagenBase64","registroForm","group","name","required","image","lastName","secondLastName","dateOfBirth","numberPhone","document","email","password","documentTypeId","addressId","rolId","uploadFile","file","dto","FormData","append","onUploadFile","event","elemento","target","files","item","createUser","invalid","usuarioEnviar","value","console","log","onFileChange","reader","FileReader","onload","e","result","readAsDataURL","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Asus\\source\\repos\\Frontend_Proyect_Personal\\ESTREMOR\\src\\app\\components\\Pages\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DocumentTypeModel } from 'src/app/Models/DocumentType/DocumentTypeModel';\nimport { GetRolModel } from 'src/app/Models/Rol/RolModel';\nimport { CreateUserModel } from 'src/app/Models/Users/CreateUserModel';\nimport { UserServiceService } from 'src/app/services/Users/user-service.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n    registroForm: FormGroup;\n    imagenSeleccionada: File = new File([],'');\n    imagenBase64: string = '';\n    constructor\n    (\n      private formBuilder: FormBuilder,\n      private userService : UserServiceService\n    ) {\n\n      this.registroForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        image: ['', Validators.required],\n        lastName: ['', Validators.required],\n        secondLastName:['', Validators.required],\n        dateOfBirth: ['', Validators.required],\n        numberPhone: ['', Validators.required],\n        document: ['', Validators.required],\n        email: ['', Validators.required],\n        password: ['', Validators.required],\n        documentTypeId: ['',Validators.required],\n        addressId: [''],\n        rolId: ['', Validators.required]\n      });\n    }\n\n    uploadFile(file:Blob){\n      const dto = new FormData()\n      dto.append('image',file);\n    }\n\n    onUploadFile(event:Event){\n      const elemento = event.target as HTMLInputElement;\n      const file = elemento.files?.item(0);\n      if(file){\n        this.imagenSeleccionada = file;\n      }\n    }\n\n    createUser() {\n      if (this.registroForm.invalid) {\n        // Si el formulario no es válido, puedes mostrar un mensaje de error o realizar alguna acción adicional\n        return;\n      }\n\n      // Crear un nuevo objeto de usuario para enviar al backend\n      const usuarioEnviar: CreateUserModel = {\n        name: this.registroForm.value.name,\n        image: this.imagenBase64,\n        lastName: this.registroForm.value.lastName,\n        secondLastName: this.registroForm.value.secondLastName,\n        dateOfBirth: this.registroForm.value.dateOfBirth,\n        numberPhone: this.registroForm.value.numberPhone,\n        document: this.registroForm.value.document,\n        email: this.registroForm.value.email,\n        password: this.registroForm.value.password,\n        documentTypeId: this.registroForm.value.documentTypeId,\n        addressId: this.registroForm.value.addressId,\n        rolId: this.registroForm.value.rolId\n      };\n\n      // Aquí puedes realizar las operaciones necesarias para enviar el objeto 'usuarioEnviar' al backend a través de una solicitud HTTP\n      // Asegúrate de manejar adecuadamente el envío de la imagen y otros datos según las necesidades de tu backend\n\n      console.log(usuarioEnviar);\n    }\n\n    onFileChange(event: any) {\n      this.imagenSeleccionada = event.target.files[0];\n      if (this.imagenSeleccionada) {\n        const reader = new FileReader();\n        reader.onload = (e: any) => {\n          this.imagenBase64 = e.target.result;\n        };\n        reader.readAsDataURL(this.imagenSeleccionada);\n      } else {\n        this.imagenBase64 = '';\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}