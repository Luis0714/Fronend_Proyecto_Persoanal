{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, userService) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.imagenSeleccionada = new File([], '');\n    this.imagenBase64 = '';\n    this.name = new FormControl('name');\n    this.lastName = new FormControl('last name');\n    this.secondLastName = new FormControl('Secund last name');\n    this.dateOfBirth = new FormControl();\n    this.documentTypeId = new FormControl();\n    this.document = new FormControl();\n    this.numberPhone = new FormControl();\n    this.email = new FormControl('luisandres@gmail.com', Validators.required);\n    this.addressId = new FormControl();\n    this.rolId = new FormControl();\n  }\n  uploadFile(file) {\n    const dto = new FormData();\n    dto.append('image', file);\n  }\n  onUploadFile(event) {\n    const elemento = event.target;\n    const file = elemento.files?.item(0);\n    if (file) {\n      this.imagenSeleccionada = file;\n    }\n  }\n  createUser() {\n    // this.userService.create(usuarioEnviar).subscribe(response =>{\n    //   console.log(response)\n    // })\n  }\n  convertFromBase64ToBytes(base64String) {\n    const raw = atob(base64String.replace(/^data:image\\/\\w+;base64,/, ''));\n    const length = raw.length;\n    const bytes = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n      bytes[i] = raw.charCodeAt(i);\n    }\n    return bytes;\n  }\n  onFileChange(event) {\n    this.imagenSeleccionada = event.target.files[0];\n    if (this.imagenSeleccionada) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.imagenBase64 = e.target.result;\n        console.log(\"Base64\", this.imagenBase64);\n      };\n      reader.readAsDataURL(this.imagenSeleccionada);\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["Component","FormControl","Validators","RegisterComponent","constructor","formBuilder","userService","imagenSeleccionada","File","imagenBase64","name","lastName","secondLastName","dateOfBirth","documentTypeId","document","numberPhone","email","required","addressId","rolId","uploadFile","file","dto","FormData","append","onUploadFile","event","elemento","target","files","item","createUser","convertFromBase64ToBytes","base64String","raw","atob","replace","length","bytes","Uint8Array","i","charCodeAt","onFileChange","reader","FileReader","onload","e","result","console","log","readAsDataURL","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Asus\\source\\repos\\Frontend_Proyect_Personal\\ESTREMOR\\src\\app\\components\\Pages\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { CreateUserModel } from 'src/app/Models/Users/CreateUserModel';\nimport { UserServiceService } from 'src/app/services/Users/user-service.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n    imagenSeleccionada: File = new File([],'');\n    imagenBase64: string = '';\n\n    name = new FormControl('name')\n    lastName = new FormControl('last name')\n    secondLastName = new FormControl('Secund last name')\n    dateOfBirth = new FormControl()\n    documentTypeId = new FormControl()\n    document = new FormControl()\n    numberPhone = new FormControl()\n    email = new FormControl('luisandres@gmail.com', Validators.required)\n    addressId = new FormControl()\n    rolId = new FormControl()\n\n    constructor\n    (\n      private formBuilder: FormBuilder,\n      private userService : UserServiceService\n    ) {\n\n    }\n\n    uploadFile(file:Blob){\n      const dto = new FormData()\n      dto.append('image',file);\n    }\n\n    onUploadFile(event:Event){\n      const elemento = event.target as HTMLInputElement;\n      const file = elemento.files?.item(0);\n      if(file){\n        this.imagenSeleccionada = file;\n      }\n    }\n\n    createUser() {\n\n\n      // this.userService.create(usuarioEnviar).subscribe(response =>{\n      //   console.log(response)\n      // })\n    }\n    convertFromBase64ToBytes(base64String: string): Uint8Array {\n      const raw = atob(base64String.replace(/^data:image\\/\\w+;base64,/, ''));\n      const length = raw.length;\n      const bytes = new Uint8Array(length);\n\n      for (let i = 0; i < length; i++) {\n        bytes[i] = raw.charCodeAt(i);\n      }\n      return bytes;\n    }\n    onFileChange(event: any) {\n      this.imagenSeleccionada = event.target.files[0];\n      if (this.imagenSeleccionada) {\n        const reader = new FileReader();\n        reader.onload = (e: any) => {\n          this.imagenBase64 = e.target.result;\n          console.log(\"Base64\",this.imagenBase64)\n        };\n        reader.readAsDataURL(this.imagenSeleccionada);\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}