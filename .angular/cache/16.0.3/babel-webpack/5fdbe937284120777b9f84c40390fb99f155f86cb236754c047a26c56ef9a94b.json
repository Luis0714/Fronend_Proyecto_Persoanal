{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass TokenService {\n  constructor() {\n    this.logged = false;\n  }\n  saveToken(token) {\n    localStorage.setItem('Token', token);\n  }\n  saveUserToken(user) {\n    const userJSON = JSON.stringify(user);\n    localStorage.setItem('UserSesion', userJSON);\n  }\n  getToken() {\n    const token = localStorage.getItem('Token');\n    return token;\n  }\n}\nTokenService.ɵfac = function TokenService_Factory(t) {\n  return new (t || TokenService)();\n};\nTokenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokenService,\n  factory: TokenService.ɵfac,\n  providedIn: 'root'\n});\nexport { TokenService };","map":{"version":3,"names":["TokenService","constructor","logged","saveToken","token","localStorage","setItem","saveUserToken","user","userJSON","JSON","stringify","getToken","getItem","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Asus\\source\\repos\\Frontend_Proyect_Personal\\ESTREMOR\\src\\app\\services\\Tokens\\token.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { GetUserModel } from 'src/app/Models/Users/GetUserModel';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  private logged: boolean = false;\n  constructor(\n\n  ) { }\n\n  saveToken(token: string){\n    localStorage.setItem('Token',token);\n  }\n  saveUserToken(user: GetUserModel){\n    const userJSON = JSON.stringify(user);\n    localStorage.setItem('UserSesion',userJSON);\n  }\n\n  getToken(){\n    const token = localStorage.getItem('Token')\n    return token;\n  }\n\n}\n"],"mappings":";AAKA,MAGaA,YAAY;EAEvBC,YAAA;IADQ,KAAAC,MAAM,GAAY,KAAK;EAG3B;EAEJC,SAASA,CAACC,KAAa;IACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACF,KAAK,CAAC;EACrC;EACAG,aAAaA,CAACC,IAAkB;IAC9B,MAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IACrCH,YAAY,CAACC,OAAO,CAAC,YAAY,EAACG,QAAQ,CAAC;EAC7C;EAEAG,QAAQA,CAAA;IACN,MAAMR,KAAK,GAAGC,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAOT,KAAK;EACd;;AAjBWJ,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAc,OAAA,EAAZd,YAAY,CAAAe,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPhB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}