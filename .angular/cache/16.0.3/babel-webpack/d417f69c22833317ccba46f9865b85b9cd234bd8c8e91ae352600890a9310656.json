{"ast":null,"code":"import { API_ROUTES } from 'src/apis-routes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UserServiceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${API_ROUTES.UserUrl}`;\n  }\n  create(data) {\n    return this.http.post(`${this.apiUrl}/create`, data);\n  }\n  update(data) {\n    return this.http.post(`${this.apiUrl}/create`, data);\n  }\n  getAll() {\n    return this.http.get(`${this.apiUrl}/getAllUsers`);\n  }\n}\nUserServiceService.ɵfac = function UserServiceService_Factory(t) {\n  return new (t || UserServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserServiceService,\n  factory: UserServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserServiceService };","map":{"version":3,"names":["API_ROUTES","UserServiceService","constructor","http","apiUrl","UserUrl","create","data","post","update","getAll","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Asus\\source\\repos\\Frontend_Proyect_Personal\\ESTREMOR\\src\\app\\services\\Users\\user-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { API_ROUTES } from 'src/apis-routes';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { GetUserModel } from 'src/app/Models/Users/GetUserModel';\nimport { User } from 'src/app/Models/Users/user.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\nprivate apiUrl = `${API_ROUTES.UserUrl}`;\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  create(data: Partial<User>): Observable<GetUserModel>{\n   return this.http.post<User>(`${this.apiUrl}/create`,data)\n  }\n  update(data: Partial<User>): Observable<GetUserModel>{\n    return this.http.post<User>(`${this.apiUrl}/create`,data)\n   }\n  getAll(){\n    return this.http.get<User[]>(`${this.apiUrl}/getAllUsers`)\n  }\n\n}\n"],"mappings":"AAEA,SAASA,UAAU,QAAQ,iBAAiB;;;AAO5C,MAGaC,kBAAkB;EAE7BC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFR,KAAAC,MAAM,GAAG,GAAGJ,UAAU,CAACK,OAAO,EAAE;EAGlC;EAEJC,MAAMA,CAACC,IAAmB;IACzB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAO,GAAG,IAAI,CAACJ,MAAM,SAAS,EAACG,IAAI,CAAC;EAC1D;EACAE,MAAMA,CAACF,IAAmB;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAO,GAAG,IAAI,CAACJ,MAAM,SAAS,EAACG,IAAI,CAAC;EAC1D;EACDG,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAS,GAAG,IAAI,CAACP,MAAM,cAAc,CAAC;EAC5D;;AAdWH,kBAAkB,C;mBAAlBA,kBAAkB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAlBd,kBAAkB,C;SAAlBA,kBAAkB;EAAAe,OAAA,EAAlBf,kBAAkB,CAAAgB,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPjB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}